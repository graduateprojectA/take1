{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\take1\\\\demo2\\\\board-front\\\\board-app\\\\src\\\\components\\\\ReadBoardComponent.jsx\";\nimport React, { Component } from 'react';\nimport BoardService from '../service/BoardService';\n\nclass ReadBoardComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goToUpdate = event => {\n      event.preventDefault();\n      this.props.history.push(`/create-board/${this.state.no}`);\n    };\n\n    this.deleteView = async function () {\n      if (window.confirm(\"정말로 글을 삭제하시겠습니까?\\n삭제된 글은 복구 할 수 없습니다.\")) {\n        BoardService.deleteBoard(this.state.no).then(res => {\n          console.log(\"delete result => \" + JSON.stringify(res));\n\n          if (res.status == 200) {\n            this.props.history.push('/board');\n          } else {\n            alert(\"글 삭제가 실패했습니다.\");\n          }\n        });\n      }\n    };\n\n    this.state = {\n      no: this.props.match.params.no,\n      board: {}\n    };\n    this.goToUpdate = this.goToUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    BoardService.getOneBoard(this.state.no).then(res => {\n      this.setState({\n        board: res.data\n      });\n      console.log(\"get result => \" + JSON.stringify(res.data));\n    });\n  }\n\n  returnBoardType(typeNo) {\n    let type = null;\n\n    if (typeNo == 1) {\n      type = \"자유게시판\";\n    } else if (typeNo == 2) {\n      type = \"질문과 답변 게시판\";\n    } else {\n      type = \"타입 미지정\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Board Type : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), \" \", type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n  returnDate(cTime, uTime) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uC0DD\\uC131\\uC77C : [ \", cTime, \" ] / \\uCD5C\\uC885 \\uC218\\uC815\\uC77C : [ \", uTime, \" ] \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n  goToList() {\n    this.props.history.push('/board');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card col-md-6 offset-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \" Read Detail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [this.returnBoardType(this.state.board.type), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Title \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), \" : \", this.state.board.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Contents \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), \" : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: this.state.board.contents,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" MemberNo  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), \":\", this.state.board.memberNo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), this.returnDate(this.state.board.createdTime, this.state.board.updatedTime), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: this.goToList.bind(this),\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"\\uAE00 \\uBAA9\\uB85D\\uC73C\\uB85C \\uC774\\uB3D9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            onClick: this.goToUpdate,\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"\\uAE00 \\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => this.deleteView(),\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"\\uAE00 \\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ReadBoardComponent;","map":{"version":3,"sources":["C:/take1/demo2/board-front/board-app/src/components/ReadBoardComponent.jsx"],"names":["React","Component","BoardService","ReadBoardComponent","constructor","props","goToUpdate","event","preventDefault","history","push","state","no","deleteView","window","confirm","deleteBoard","then","res","console","log","JSON","stringify","status","alert","match","params","board","bind","componentDidMount","getOneBoard","setState","data","returnBoardType","typeNo","type","returnDate","cTime","uTime","goToList","render","title","contents","memberNo","createdTime","updatedTime","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport BoardService from '../service/BoardService';\r\n\r\nclass ReadBoardComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            no: this.props.match.params.no,\r\n            board: {}\r\n        }\r\n\r\n        this.goToUpdate = this.goToUpdate.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        BoardService.getOneBoard(this.state.no).then( res => {\r\n            this.setState({board: res.data});\r\n            console.log(\"get result => \"+ JSON.stringify(res.data));\r\n        });\r\n\r\n        \r\n    }\r\n\r\n\r\n    returnBoardType(typeNo) {\r\n        let type = null;\r\n        if (typeNo == 1) {\r\n            type = \"자유게시판\";\r\n\r\n        } else if (typeNo == 2 ) {\r\n            type = \"질문과 답변 게시판\";\r\n\r\n        } else {\r\n            type = \"타입 미지정\";\r\n        }\r\n\r\n        return (\r\n            <div className = \"row\">\r\n                <label> Board Type : </label> {type}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    returnDate(cTime, uTime) {\r\n        return (\r\n            <div className = \"row\">\r\n                <label>생성일 : [ {cTime} ] / 최종 수정일 : [ {uTime} ] </label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    goToList() {\r\n        this.props.history.push('/board');\r\n    }\r\n\r\n    goToUpdate = (event) => {\r\n        event.preventDefault();\r\n        this.props.history.push(`/create-board/${this.state.no}`);\r\n    }\r\n\r\n    deleteView = async function () {\r\n        if(window.confirm(\"정말로 글을 삭제하시겠습니까?\\n삭제된 글은 복구 할 수 없습니다.\")) {\r\n            BoardService.deleteBoard(this.state.no).then( res => {\r\n                console.log(\"delete result => \"+ JSON.stringify(res));\r\n                if (res.status == 200) {\r\n                    this.props.history.push('/board');\r\n                } else {\r\n                    alert(\"글 삭제가 실패했습니다.\");\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className = \"card col-md-6 offset-md-3\">\r\n                    <h3 className =\"text-center\"> Read Detail</h3>\r\n                    <div className = \"card-body\">\r\n                            {this.returnBoardType(this.state.board.type)} \r\n                            <div className = \"row\">\r\n                                <label> Title </label> : {this.state.board.title}\r\n                            </div>\r\n\r\n                            <div className = \"row\">\r\n                                <label> Contents </label> : <br></br>\r\n                                <textarea value={this.state.board.contents} readOnly/> \r\n                            </div >\r\n\r\n                            <div className = \"row\">\r\n                                <label> MemberNo  </label>: \r\n                                {this.state.board.memberNo}\r\n                            </div>\r\n\r\n                            {this.returnDate(this.state.board.createdTime, this.state.board.updatedTime) }\r\n\r\n                            <button className=\"btn btn-primary\" onClick={this.goToList.bind(this)} style={{marginLeft:\"10px\"}}>글 목록으로 이동</button>\r\n                            <button className=\"btn btn-info\" onClick={this.goToUpdate} style={{marginLeft:\"10px\"}}>글 수정</button>\r\n                            <button className=\"btn btn-danger\" onClick={() => this.deleteView()} style={{marginLeft:\"10px\"}}>글 삭제</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ReadBoardComponent;"]},"metadata":{},"sourceType":"module"}